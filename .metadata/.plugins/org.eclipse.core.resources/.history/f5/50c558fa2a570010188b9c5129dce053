package mentor;

public class SixPracticeMagicSquare {

	public static void main(String[] args) {

		System.out.println("========4번========");
		//로직구성
		//) 마방진의 한 변의 길이를 상수로 선언
		//) 마방진의 넓이로 정수형 1차원 배열 선언
		//) 마방진을 표현할 정수형 2차원 배열 선언
		//) 좌표가 될 정수형 변수 2개 선언 및 초기화 (최초 : 0, 2)
		//) 반복문을 이용해 1차원 배열에 1부터 끝 숫자까지 대입하기
		//) 
		//) 
		//) 
		//) 
		

		final int SQUARE = 5; // 3, 7, 5, 9 ... 홀수로만 지정 가능
		int[] arr = new int[SQUARE * SQUARE];
		int[][] square = new int[SQUARE][SQUARE];
		int x = 0, y = 2;

		for (int i = 0; i < arr.length; i++) {
			arr[i] = i + 1;
		}

		for (int i = 0; i < SQUARE * SQUARE; i++) {
			square[x][y] = arr[i];

			if (i % SQUARE == SQUARE - 1) {
				x++;
			} else {
				x--;
				y++;
			}

			if (x == -1) {
				x = SQUARE - 1;
			}
			if (x == SQUARE) {
				x = 0;
			}
			if (y == SQUARE) {
				y = 0;
			}
		}

		for (int i = 0; i < square.length; i++) {
			int[] ar = square[i];
			int sum = 0;
			for (int j = 0; j < ar.length; j++) {
				System.out.printf("%02d ", ar[j]);
				sum += ar[j];
			}
			System.out.println();
		}

	}
}
